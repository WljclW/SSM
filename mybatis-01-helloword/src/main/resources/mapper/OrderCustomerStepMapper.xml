<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.mybatis01helloword.dao.OrderCustomerStepMapper">


    <select id="gteCustomerById" resultType="com.example.mybatis01helloword.bean.Customer">
        select * from t_customer where id = #{id}
    </select>


    <select id="getOrdersByCustomerId" resultType="com.example.mybatis01helloword.bean.Order">
        select * from t_order where customer_id = #{id}
    </select>


<!--分布查询的自定义结果集-->
    <!--   分步查询的自定义结果集： -->
    <resultMap id="CustomerOrdersStepRM" type="com.example.mybatis01helloword.bean.Customer">
        <id column="id" property="id"></id>
        <result column="customer_name" property="customerName"></result>
        <result column="phone" property="phone"></result>
        <collection property="orderds"
                    ofType="com.example.mybatis01helloword.bean.Order"
                    select="com.atguigu.mybatis.mapper.OrderCustomerStepMapper.getOrdersByCustomerId"
                    column="id">
            <!--实验的出错点：select="com.atguigu.mybatis.mapper.OrderCustomerStepMapper.getOrdersByCustomerId"-->
        </collection>
        <!--    告诉MyBatis，封装 orders 属性的时候，是一个集合，
                但是这个集合需要调用另一个 方法 进行查询；select：来指定我们要调用的另一个方法
                column：来指定我们要调用方法时，把哪一列的值作为传递的参数，交给这个方法
                   1）、column="id"： 单传参：id传递给方法
                   2）、column="{cid=id,name=customer_name}"：多传参（属性名=列名）；
                        cid=id：cid是属性名，它是id列的值
                        name=customer_name：name是属性名，它是customer_name列的值
        -->
    </resultMap>

    <select id="getOrdersByCustomerIdWithStep" resultMap="CustomerOrdersStepRM">
        select * from t_customer where id = #{id}
    </select>



<!--************************下面是分步实现：根据id查询订单，然后查出对应的用户信息*********************-->
    <!--
        使用resultMap来自定义封装结果集
    -->
    <resultMap id="OrderCustomerStepRM" type="com.example.mybatis01helloword.bean.Order">
        <id property="id" column="id"/>
        <result property="address" column="address"/>
        <result property="amount" column="amount"/>
        <result property="customerId" column="customer_id"/>
        <!--
            一对一关系的封装使用association关键字。标签内指定：
                select：下一步查询的语句、
                javaType：封装的类型、
                column：语句的动态字段来源(填上一步查询结果的列名)
        -->
        <association property="customer"
                     javaType="com.example.mybatis01helloword.bean.Customer"
                     select = "com.example.mybatis01helloword.dao.OrderCustomerStepMapper.gteCustomerById"
                     column="customer_id">      <!--指定下一轮查询的参数来源于上一次结果的哪一列-->
            <id property="id" column="id"/>
            <result property="customerName" column="customer_name"/>
            <result property="phone" column="phone"/>
        </association>
    </resultMap>


    <select id="getOrderByIdAndCustomerStep" resultMap="OrderCustomerStepRM">
        select * from t_order where id = #{id}
    </select>
</mapper>